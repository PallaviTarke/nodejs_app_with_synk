#stages:
#  - build
#  - test
#  - snyk
#  - deploy

#variables:
#  DOCKER_IMAGE: $DOCKER_USER/nodejs-app
#  DOCKER_DRIVER: overlay2

#build:
#  stage: build
#  image: docker:latest
#  services:
#    - docker:dind
#  before_script:
#    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
#  script:
#    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
#    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
#    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_IMAGE:latest
#    - docker push $DOCKER_IMAGE:latest

test:
  stage: test
  image: node:18
  script:
    - npm install
    - npm test

snyk_code_scan:
  stage: snyk
  image: node:18
  before_script:
    - npm install -g snyk
    - snyk auth $SNYK_TOKEN
  script:
    - snyk code test --severity-threshold=high
  allow_failure: true
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "
        docker pull $DOCKER_IMAGE:latest &&
        docker stop nodejs-app || true &&
        docker rm nodejs-app || true &&
        docker run -d --name nodejs-app -p 80:3000 $DOCKER_IMAGE:latest
      "
  only:

    - main
